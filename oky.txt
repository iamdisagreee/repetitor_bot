def show_intermediate_information_lesson_day_status(list_lessons_not_formatted):
	
	# Первичная обработка временных интервалов 
	intermediate_work = []
	for interval in list_lessons_not_formatted:
		if not interval.lessons:
			intermediate_work.append(
				{
					'lesson_on': interval.work_start,
					'lesson_off': interval.work_end,
					'student': None,
					'status': None,
					'price': None
				}
			)
			continue

		for lesson in interval.lessons:
			cur_result = {}
			if not lesson.is_formed:
				cur_result = {
					'lesson_on': lesson.lesson_start,
					'lesson_off': lesson.lesson_finished,
					'student': None,
					'status': None,
					'price': None
				}
			elif not cur_result:
				cur_result = {
					'lesson_on': lesson.lesson_start,
					'lesson_off': lesson.lesson_finished,
					'student': lesson.student.name,
					'status': lesson.status,
					'price': lesson.student.price / 2
				}
		    intermediate_work.append(cur_result)
			
	# Вторичная обработка - формируем временные промежутки
	result_work = []
	last_lesson = intermediate_work[0]
	for cur_lesson in intermediate_work[1]:
	    if last_lesson['student'] is None:
            if cur_lesson['student'] is None:
                if last_lesson['lesson_off'] == cur_lesson['lesson_on']:
                    last_lesson['lesson_off'] = cur_lesson['lesson_off']
                else:
                    result_work.append(last_lesson)
                    last_lesson = cur_lesson
            else:
                result_work.append(last_lesson)
                last_lesson = cur_lesson
        else:
            if cur_lesson['student'] is not None:
                if last_lesson['student'] == cur_lesson['student']:
                    if last_lesson['lesson_off'] == cur_lesson['lesson_on']:
                        last_lesson['lesson_off'] = cur_lesson['lesson_off']
                    else:
                        result_work.append(last_lesson)
                        last_lesson = cur_lesson
                else:
                        result_work.append(last_lesson)
                        last_lesson = cur_lesson
            else:
                result_work.append(last_lesson)
                last_lesson = cur_lesson

    return result_work






